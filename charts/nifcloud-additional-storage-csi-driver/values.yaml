# Default values for nifcloud-additional-storage-csi-driver.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: ghcr.io/nifcloud/nifcloud-additional-storage-csi-driver
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

controller:
  replicaCount: 2
  podAnnotations: {}
  nodeSelector: {}
  extraEnv: {}
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app
                  operator: In
                  values:
                    - nifcloud-additional-storage-csi-controller
            topologyKey: kubernetes.io/hostname
          weight: 100
  tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
      tolerationSeconds: 300
  serviceAccount:
    create: true
    name: nifcloud-additional-storage-csi-controller-sa
    annotations: {}
  priorityClassName: system-cluster-critical
  podSecurityContext: {}
  securityContext:
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
  logLevel: 2
  resources:
    requests:
      cpu: 50m
      memory: 128Mi
    limits:
      cpu: 250m
      memory: 256Mi
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  defaultFsType: ext4

node:
  podAnnotations: {}
  nodeSelector: {}
  extraEnv: {}
  affinity: {}
  tolerations:
    - operator: Exists
      effect: NoExecute
      tolerationSeconds: 300
  serviceAccount:
    create: true
    name: nifcloud-additional-storage-csi-node-sa
    annotations: {}
  priorityClassName: system-node-critical
  podSecurityContext:
    runAsNonRoot: false
    runAsUser: 0
    runAsGroup: 0
    fsGroup: 0
  securityContext:
    privileged: true
    readOnlyRootFilesystem: true
  logLevel: 2
  resources:
    requests:
      cpu: 50m
      memory: 128Mi
    limits:
      cpu: 250m
      memory: 256Mi
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: "10%"

sidecars:
  provisioner:
    image:
      repository: registry.k8s.io/sig-storage/csi-provisioner
      tag: v3.5.0
    logLevel: 2
    timeout: 600s
    resources:
      requests:
        cpu: 30m
        memory: 32Mi
      limits:
        cpu: 200m
        memory: 128Mi
    securityContext:
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
  attacher:
    image:
      repository: registry.k8s.io/sig-storage/csi-attacher
      tag: v4.3.0
    logLevel: 2
    timeout: 600s
    resources:
      requests:
        cpu: 30m
        memory: 32Mi
      limits:
        cpu: 200m
        memory: 128Mi
    securityContext:
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
  resizer:
    image:
      repository: registry.k8s.io/sig-storage/csi-resizer
      tag: v1.8.0
    logLevel: 2
    timeout: 600s
    resources:
      requests:
        cpu: 30m
        memory: 32Mi
      limits:
        cpu: 200m
        memory: 128Mi
    securityContext:
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
  nodeDriverRegistrar:
    image:
      repository: registry.k8s.io/sig-storage/csi-node-driver-registrar
      tag: v2.8.0
    logLevel: 2
    resources:
      requests:
        cpu: 30m
        memory: 32Mi
      limits:
        cpu: 200m
        memory: 128Mi
    securityContext:
      readOnlyRootFilesystem: false
      allowPrivilegeEscalation: false
  livenessProbe:
    image:
      repository: registry.k8s.io/sig-storage/livenessprobe
      tag: v2.10.0
    resources:
      requests:
        cpu: 20m
        memory: 32Mi
      limits:
        cpu: 100m
        memory: 128Mi
    securityContext:
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false

nifcloud:
  region: ""
  accessKeyId:
    secretName: ""
    key: ""
  secretAccessKey:
    secretName: ""
    key: ""

imagePullSecrets: []
nameOverride: ""

storageClasses: []
#  - name: nifcloud-standard-flash
#    annotations:
#      storageclass.kubernetes.io/is-default-class: "true"
#    parameters:
#      type: standard-flash-a
#    allowVolumeExpansion: true
